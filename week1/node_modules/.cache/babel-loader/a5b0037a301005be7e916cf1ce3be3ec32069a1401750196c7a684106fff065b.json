{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\rndmq\\\\src\\\\components\\\\RandomQuote\\\\RandomQuote.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './RandomQuote.css';\nimport twitter_icon from '../Assets/twitter-icon.webp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomQuote = () => {\n  _s();\n  let quotes = [];\n  var text = '';\n  var author = '';\n  async function loadQuotes() {\n    const response = await fetch(\"https://type.fit/api/quotes\");\n    quotes = await response.json();\n    console.log(quotes[Math.round(Math.random(1, 10) * 10)]);\n  }\n  useEffect(() => {\n    let timerId = setTimeout(() => {\n      loadQuotes();\n    }, 2000);\n    return () => {\n      clearTimeout(timerId);\n    };\n  });\n  const [quote, setQuote] = useState({\n    text: \"Difficulties increase the nearer we got to the goal.\",\n    author: \"Johann Wolfgang von Goethe\"\n  });\n\n  // const random = () => {\n  //     const select = quotes[Math.floor(Math.random()*quotes.length)];\n  //     setQuote(select);  \n  // }\n\n  loadQuotes();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote\",\n      children: quote.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"author\",\n          children: quote.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icons\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: twitter_icon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(RandomQuote, \"kmNdd96Snsam+RhJDgUry0ukP/4=\");\n_c = RandomQuote;\nexport default RandomQuote;\nvar _c;\n$RefreshReg$(_c, \"RandomQuote\");","map":{"version":3,"names":["React","useEffect","useState","twitter_icon","jsxDEV","_jsxDEV","RandomQuote","_s","quotes","text","author","loadQuotes","response","fetch","json","console","log","Math","round","random","timerId","setTimeout","clearTimeout","quote","setQuote","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/rndmq/src/components/RandomQuote/RandomQuote.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './RandomQuote.css'\r\nimport twitter_icon from '../Assets/twitter-icon.webp'\r\n\r\n\r\nconst RandomQuote = () => {\r\n\r\n    let quotes = [];\r\n    var text='';\r\n    var author='';\r\n    async function loadQuotes() {\r\n        const response = await fetch(\"https://type.fit/api/quotes\")\r\n        quotes = await response.json();\r\n        console.log(quotes[(Math.round(Math.random(1,10)*10))]) \r\n\r\n    }\r\n    useEffect(() => {\r\n        let timerId = setTimeout(() => {\r\n            loadQuotes();\r\n        }, 2000);\r\n\r\n        return () => {\r\n            clearTimeout(timerId);\r\n        };\r\n        \r\n    }, );\r\n\r\n    \r\n\r\n        \r\n        const [quote,setQuote] = useState({\r\n            text: \"Difficulties increase the nearer we got to the goal.\",\r\n            author: \"Johann Wolfgang von Goethe\",\r\n        });\r\n\r\n        // const random = () => {\r\n        //     const select = quotes[Math.floor(Math.random()*quotes.length)];\r\n        //     setQuote(select);  \r\n        // }\r\n\r\n        loadQuotes();\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"quote\">{quote.text}</div>\r\n            <div>\r\n                <div className=\"line\"></div>\r\n                <div className=\"bottom\">\r\n                    <div className=\"author\">{quote.author}</div>\r\n                    <div className=\"icons\">\r\n                        \r\n                        <img src={twitter_icon} alt=\"\" />\r\n                                               \r\n\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n\r\nexport default RandomQuote\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAC1B,OAAOC,YAAY,MAAM,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGtD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,IAAI,GAAC,EAAE;EACX,IAAIC,MAAM,GAAC,EAAE;EACb,eAAeC,UAAUA,CAAA,EAAG;IACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;IAC3DL,MAAM,GAAG,MAAMI,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC9BC,OAAO,CAACC,GAAG,CAACR,MAAM,CAAES,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,EAAC,EAAE,CAAC,GAAC,EAAE,CAAC,CAAE,CAAC;EAE3D;EACAlB,SAAS,CAAC,MAAM;IACZ,IAAImB,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC3BV,UAAU,CAAC,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACTW,YAAY,CAACF,OAAO,CAAC;IACzB,CAAC;EAEL,CAAG,CAAC;EAKA,MAAM,CAACG,KAAK,EAACC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC;IAC9BO,IAAI,EAAE,sDAAsD;IAC5DC,MAAM,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA;EACA;EACA;;EAEAC,UAAU,CAAC,CAAC;EAEhB,oBACIN,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBrB,OAAA;MAAKoB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEH,KAAK,CAACd;IAAI;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACzCzB,OAAA;MAAAqB,QAAA,gBACIrB,OAAA;QAAKoB,SAAS,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5BzB,OAAA;QAAKoB,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACnBrB,OAAA;UAAKoB,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAEH,KAAK,CAACb;QAAM;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC5CzB,OAAA;UAAKoB,SAAS,EAAC,OAAO;UAAAC,QAAA,eAElBrB,OAAA;YAAK0B,GAAG,EAAE5B,YAAa;YAAC6B,GAAG,EAAC;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGhC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAvB,EAAA,CAvDCD,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAyDjB,eAAeA,WAAW;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}