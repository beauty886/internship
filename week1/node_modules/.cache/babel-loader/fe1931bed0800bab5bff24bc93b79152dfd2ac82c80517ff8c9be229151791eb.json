{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\rndmq\\\\src\\\\components\\\\RandomQuote\\\\RandomQuote.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './RandomQuote.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomQuote = () => {\n  _s();\n  let quotes = [];\n  async function loadQuotes() {\n    const response = await fetch(\"https://type.fit/api/quotes\");\n    quotes = await response.json();\n  }\n  const [quote, setQuote] = useState({\n    text: \"Difficulties increase the nearer we got to the goal.\",\n    author: \"Johann Wolfgang von Goethe\"\n  });\n  const random = () => {\n    const select = quotes[Math.floor(Math.random() * quotes.length)];\n    setQuote(select);\n  };\n  loadQuotes();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote\",\n      children: quote.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"author\",\n          children: quote.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(RandomQuote, \"SpV63Q1+CI3PD9hjsG1G2JzGyyY=\");\n_c = RandomQuote;\nexport default RandomQuote;\nvar _c;\n$RefreshReg$(_c, \"RandomQuote\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RandomQuote","_s","quotes","loadQuotes","response","fetch","json","quote","setQuote","text","author","random","select","Math","floor","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/rndmq/src/components/RandomQuote/RandomQuote.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './RandomQuote.css'\r\n\r\n\r\nconst RandomQuote = () => {\r\n\r\n    let quotes = [];\r\n\r\n    async function loadQuotes() {\r\n        const response = await fetch(\"https://type.fit/api/quotes\")\r\n        quotes = await response.json();\r\n\r\n    }\r\n\r\n\r\n        const [quote,setQuote] = useState({\r\n            text: \"Difficulties increase the nearer we got to the goal.\",\r\n            author: \"Johann Wolfgang von Goethe\",\r\n        });\r\n\r\n        const random = () => {\r\n            const select = quotes[Math.floor(Math.random()*quotes.length)];\r\n            setQuote(select);  \r\n        }\r\n\r\n        loadQuotes();\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"quote\">{quote.text}</div>\r\n            <div>\r\n                <div className=\"line\"></div>\r\n                <div className=\"bottom\">\r\n                    <div className=\"author\">{quote.author}</div>\r\n                    <div className=\"icons\">\r\n                                               \r\n\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n\r\nexport default RandomQuote\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,IAAIC,MAAM,GAAG,EAAE;EAEf,eAAeC,UAAUA,CAAA,EAAG;IACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;IAC3DH,MAAM,GAAG,MAAME,QAAQ,CAACE,IAAI,CAAC,CAAC;EAElC;EAGI,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGX,QAAQ,CAAC;IAC9BY,IAAI,EAAE,sDAAsD;IAC5DC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjB,MAAMC,MAAM,GAAGV,MAAM,CAACW,IAAI,CAACC,KAAK,CAACD,IAAI,CAACF,MAAM,CAAC,CAAC,GAACT,MAAM,CAACa,MAAM,CAAC,CAAC;IAC9DP,QAAQ,CAACI,MAAM,CAAC;EACpB,CAAC;EAEDT,UAAU,CAAC,CAAC;EAEhB,oBACIJ,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBlB,OAAA;MAAKiB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEV,KAAK,CAACE;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACzCtB,OAAA;MAAAkB,QAAA,gBACIlB,OAAA;QAAKiB,SAAS,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5BtB,OAAA;QAAKiB,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACnBlB,OAAA;UAAKiB,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAEV,KAAK,CAACG;QAAM;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC5CtB,OAAA;UAAKiB,SAAS,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGjB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAApB,EAAA,CAvCCD,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAyCjB,eAAeA,WAAW;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}